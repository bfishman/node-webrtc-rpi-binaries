# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := action_before_build
### Rules for action "run_build_script":
quiet_cmd_binding_gyp_action_before_build_target_run_build_script = ACTION Run build script $@
cmd_binding_gyp_action_before_build_target_run_build_script = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p /dev; node bin/build.js --target-arch arm --configuration "$(BUILDTYPE)" --module_path /home/bfishman/node-webrtc/build/wrtc/v0.0.59/Release/node-v47-linux-arm

/dev/null: obj := $(abs_obj)
/dev/null: builddir := $(abs_builddir)
/dev/null: TOOLSET := $(TOOLSET)
/dev/null:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_action_before_build_target_run_build_script)

all_deps += /dev/null
action_binding_gyp_action_before_build_target_run_build_script_outputs := /dev/null


### Rules for final target.
# Build our special outputs first.
$(obj).target/action_before_build.stamp: | $(action_binding_gyp_action_before_build_target_run_build_script_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_action_before_build_target_run_build_script_outputs): | 

$(obj).target/action_before_build.stamp: TOOLSET := $(TOOLSET)
$(obj).target/action_before_build.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/action_before_build.stamp
# Add target alias
.PHONY: action_before_build
action_before_build: $(obj).target/action_before_build.stamp

# Add target alias to "all" target.
.PHONY: all
all: action_before_build

